{"version":3,"sources":["components/simple-form/indian.png","components/home/Home.js","components/faq/Question.js","components/faq/Tags.js","components/faq/FAQ.js","components/basicTodo/List.js","components/basicTodo/Todo.js","components/pomodoroTimer/Timer.js","components/chart/Chart.js","components/chart/Main.js","components/sumAllNumbers/Result.js","components/sumAllNumbers/Numbers.js","components/sumAllNumbers/SumAll.js","components/pagination/Pages.js","components/pagination/Posts.js","components/pagination/Pagination.js","components/infiniteScrolling/useBookSearch.js","components/infiniteScrolling/Spinner.js","components/infiniteScrolling/InfiniteScrolling.js","components/basicRouter/Posts.js","components/basicRouter/Users.js","components/basicRouter/BasicRouter.js","components/simple-form/SimpleForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","to","Question","faq","onToggleQ","open","question","onClick","id","answer","Tags","list","removeQ","map","tag","i","key","questions","uuid","tags","FAQ","useState","faqs","setFaqs","wantedQ","setWantedQ","useEffect","toggleQuestion","filteredQs","filter","toLowerCase","includes","tagsList","Set","flat","name","type","value","autoComplete","placeholder","onChange","e","target","autoFocus","length","index","Fragment","List","props","items","item","completed","task","markAsCompleted","removeTask","tasks","Todo","setItems","setTask","onSubmit","preventDefault","concat","filteredTasks","Timer","state","alert","message","time","times","defaultTime","shortBreak","longBreak","setDefaultTime","setState","setTime","newTime","restartInterval","clearInterval","interval","setInterval","countDown","setTimeForWork","setTimeForShortBreak","setTimeForLongBreak","displayTimer","seconds","m","Math","floor","s","this","Component","Chart","updateChart","c3","generate","bindto","data","columns","chartType","Main","setBarChart","setLineChart","Result","result","PureComponent","Numbers","numbers","results","handleNumberChange","Array","from","reduce","a","b","Number","headerStyle","backgroundColor","color","textAlign","fontSize","padding","SumAll","style","Pages","postsPerPage","totalPosts","paginate","pageNumbers","ceil","push","number","href","Posts","posts","loading","post","title","Pagination","setPosts","setLoading","currentPage","setCurrentPage","axios","get","res","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","pageNumber","useBookSearch","query","error","setError","books","setBooks","hasMore","setHasMore","cancel","method","url","params","q","page","cancelToken","CancelToken","c","then","prevBooks","docs","catch","isCancel","Spinner","InfiniteScrolling","setQuery","setPageNumber","observer","useRef","lastBookElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumer","observe","book","ref","userId","match","history","useHistory","fetch","json","goBack","body","Users","users","setUsers","useRouteMatch","path","usersList","fetchUsers","user","BasicRouter","exact","component","SimpleForm","firstName","lastName","email","phone","info","setInfo","errors","setErrors","handleOnChange","handleOnFocus","src","img","onFocus","routes","App","route","children","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.dd8637a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/indian.a99e518e.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './home-styles.css'\n\nconst Home = () => {\n    return (\n        <div className='home-container'>\n            <h1>Apps collection</h1>\n            <div className='apps-container'>\n\n                <div className='app'>\n                    <Link to='/apps-collection/accordion'>\n                        <h2>FAQ page</h2>\n                    </Link>\n                    <ul>\n                        <li>Using the accordion approach</li>\n                        <li>The questions are local</li>\n                    </ul>\n                </div>\n\n                <div className='app'>\n                    <Link to='/apps-collection/basic-todo'>\n                        <h2>Basic Todo</h2>\n                    </Link>\n                    <ul>\n                        <li>Functional Components</li>\n                        <li>Add, Remove and Mark a TASK as completed </li>\n                    </ul>\n                </div>\n\n                <div className='app'>\n                    <Link to='/apps-collection/pomodoro-timer'>\n                        <h2>Pomodoro Timer</h2>\n                    </Link>\n                    <ul>\n                        <li>Implementing constructor and componentDidMount</li>\n                    </ul>\n                </div>\n\n                <div className='app'>\n                    <Link to='/apps-collection/chart'>\n                        <h2>Basic Chart</h2>\n                    </Link>\n                    <ul>\n                        <li>Using C3.js</li>\n                        <li>Implementing <code>componentDidUpdate()</code></li>\n                        <li>using local cryptocurrencies data</li>\n                    </ul>\n                </div>\n\n                <div className='app'>\n                    <Link to='/apps-collection/sum-all'>\n                        <h2>Sum of All Numbers</h2>\n                    </Link>\n                    <ul>\n                        <li>Pure Components</li>\n                        <li>Sum of entered numbers</li>\n                    </ul>\n                </div>\n\n                <div className='app'>\n                    <Link to='/apps-collection/pagination'>\n                        <h2>Pagination</h2>\n                    </Link>\n                    <ul>\n                        <li>data from jsonplaceholder</li>\n                        <li>axios</li>\n                        <li>functional component</li>\n                    </ul>\n                </div>\n\n                <div className='app'>\n                    <Link to='/apps-collection/infinite-scrolling'>\n                        <h2>Infinite Scrolling | Book Finder</h2>\n                    </Link>\n                    <ul>\n                        <li>Custom Hook</li>\n                        <li><code>useRef() | useCallback()</code></li>\n                        <li><code>axios</code></li>\n\n                    </ul>\n                </div>\n                <div className='app'>\n                    <Link to='/apps-collection/basic-router'>\n                        <h2>Basic Router | Authors and Posts</h2>\n                    </Link>\n                    <ul>\n                        <li>react-router</li>\n                        <li>nesting routes</li>\n                    </ul>\n                </div>\n                <div className='app'>\n                    <Link to='/apps-collection/simple-form'>\n                        <h2>Simple Form</h2>\n                    </Link>\n                    <ul>\n                        <li>Basic validation</li>\n                        <li>Error messages</li>\n                        <li>Handle events</li>\n                    </ul>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\n\nconst Question = ({faq, onToggleQ}) => {\n    return (\n        <div className={'faq ' + (faq.open ? 'open' : '')}>\n            <div className='faq-question'>\n                {faq.question}\n                {/* <p>{faq.question} {faq.tags.map((tag, index) => <i key={index}>{tag}</i> )}</p> */}\n                <span onClick={() => onToggleQ(faq.id)}>&#8595;</span>\n            </div>\n            <div className='faq-answer'>\n                {faq.answer}\n            </div>\n        </div>\n    )\n}\n\nexport default Question;","import React from 'react';\n\nconst Tags = ({list, removeQ}) => {\n\n    return(\n        <div className='tags-container'>\n            {\n                list.map((tag, i) => (\n                    <p key={i} className='tag'>{tag}<span className='close-tag' onClick={() => removeQ(tag)}>X</span></p>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Tags;","import React, { useState, useEffect } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport Question from './Question.js';\nimport './faq-styles.css';\nimport Tags from './Tags.js';\n\nconst questions = [\n    {   \n        id: uuid(),\n        question: \"how many programmers does it take to screw in a ligthbulb?\",\n        answer: \"None, we don't adress hardware issues. 🤪\",\n        tags: ['funny'],\n        open: true\n    },\n    {\n        id: uuid(),\n        question: \"Who is the most awesome person?\",\n        answer: \"You, 🙃\",\n        tags: ['funny'],\n        open: false\n    },\n    {\n        id: uuid(),\n        question:\"How many questions does it take to make a successful FAQ page?\",\n        answer: \"Thiiiiiiiis many. 📈\",\n        tags: ['funny'],\n        open: false\n    },\n    {\n        id: uuid(),\n        question: 'What\\'s a Programmer?',\n        answer: \"An organism that turns caffeine and pizza into software.\",\n        tags: ['funny'],\n        open: false\n    },\n    {\n        id: uuid(),\n        question: 'What\\'s an Algorithm?',\n        answer: \"Word used by a programmer when they do not want to explain what they did.\",\n        tags: ['funny'],\n        open: false\n    },\n    {\n        id: uuid(),\n        question: 'QA vs Developer',\n        answer: \"Two people from different planets working together to deliver a quality product.\",\n        tags: ['developer'],\n        open: false\n    },\n    {\n        id: uuid(),\n        question: 'What is the difference between an element and a component in React?',\n        answer: \"An element is a plain JavaScript object that represents a DOM node or component. Components can be either classes or functions, that take props as an input and return an element tree as the output.\",\n        tags: ['react'],\n        open: false\n    },\n    {\n        id: uuid(),\n        question: 'In which states can a Promise be?',\n        answer: \"pending, fulfilled, rejected\",\n        tags: ['js'],\n        open: false   \n    },\n    {\n        id: uuid(),\n        question: 'What is the purpose of the alt attribute on images?',\n        answer: \"Web crawlers use alt tags to understand image content, so they are considered important for Search Engine Optimization (SEO).\",\n        tags: ['html'],\n        open: false   \n    },\n    {\n        id: uuid(),\n        question: 'What is the difference between HTML and React event handling?',\n        answer: \"HTML uses lowercase, React uses camelCase.\",\n        tags: ['html'],\n        open: false   \n    },\n    {\n        id: uuid(),\n        question: 'Can you name the four types of @media properties?',\n        answer: \"All, Print, Screen, Speech\",\n        tags: ['css'],\n        open: false   \n    },\n    {\n        id: uuid(),\n        question: 'What is the difference between em and rem units?',\n        answer: 'em units inherit their value from the font-size of the parent element; rem units inherit their value from the font-size of the root element (html)',\n        tags: ['css'],\n        open: false   \n    }\n]\n\n// const FAQ = () => {\n//     /*1st approach\n//         const [ faqs, setFaqs] = useState(questions);\n//     */\n//     const [ faqs, setFaqs] = useState([]);\n//     const [ wantedQ, setWantedQ ] = useState('');\n//     const [ filteredQs, setFilteredQs ] = useState([])\n\n//     useEffect(() => { \n//         setFaqs(questions)\n//     }, [wantedQ])\n\n//     const toggleQuestion = index => {\n//         setFaqs(\n//             filteredQs.map((faq, i) => {\n//                 if(i === index){\n//                     faq.open = !faq.open\n//                 }else{\n//                     faq.open = false\n//                 }\n//                 return faq;\n//             })\n//         )\n//     }\n\n//     const findQuestionHandler = (e) => {\n//         /*1st approach\n//         const qsFound = questions.filter(faq => faq.question.toLocaleLowerCase().includes(e.target.value.toLocaleLowerCase()))\n//         setFaqs(qsFound)*/\n//         setWantedQ(e.target.value)\n//     }\n//     /* 2nd approach\n//         const filteredQuestions = faqs.filter(faq =>faq.question.toLocaleLowerCase().includes(wantedQ.toLocaleLowerCase()))\n//     */\n\n//     //3rd approach\n//     useEffect(() => {\n//         setFilteredQs(\n//             faqs.filter(faq => faq.question.toLocaleLowerCase().includes(wantedQ.toLocaleLowerCase()))\n//         )\n//     }, [faqs, wantedQ])\n\n//     const tagsList = [...new Set(filteredQs.map(faq => [...faq.tags]).flat())];\n\n//     return (\n//         <div className='faq-page-container'>\n//             <header>the best faq page ever!</header>\n//             <div className='search-question-container'>\n//                 <input\n//                     name='search'\n//                     type='text'\n//                     value={wantedQ}\n//                     autoComplete = 'off'\n//                     placeholder='Search question'\n//                     onChange={findQuestionHandler}\n//                     autoFocus={true}\n//                 />\n//             </div>\n            \n//             <Tags list={tagsList} qs={filteredQs} setQs={setFilteredQs}/>\n\n//             <div className='faqs'>\n                \n//                 {/* 1st approach\n//                     {  faqs.length === 0 \n//                     ? <span className='no-matches'>no questions found.. 😭</span> \n//                     : faqs.map((faq, index) => (\n//                         <React.Fragment key={index}>\n//                             <Question faq={faq} index={index} onToggleQ={toggleQuestion}/>\n//                         </React.Fragment>\n//                      ))\n//                 } */}\n//                 {/*2nd approach\n//                     filteredQuestions.map((faq, index) => (\n//                         <React.Fragment key={index}>\n//                             <Question faq={faq} index={index} onToggleQ={toggleQuestion}/>\n//                         </React.Fragment>\n//                     ))\n//                 */}\n//                 {\n//                     /*3rd approach using a second useEffect()*/\n//                     filteredQs.length === 0 \n//                     ? <span className='no-matches'>no questions found.. 😭</span> \n//                     : filteredQs.map((faq, index) => (\n//                         <React.Fragment key={index}>\n//                             <Question faq={faq} index={index} onToggleQ={toggleQuestion}/>\n//                         </React.Fragment>\n//                     ))\n//                 }\n//             </div>\n//         </div>\n//     )\n// }\n\n// export default FAQ;\n\nconst FAQ = () => {\n    const [ faqs, setFaqs] = useState([]);\n    const [ wantedQ, setWantedQ ] = useState('');\n\n    \n    useEffect(() => {\n        // if(wantedQ.length === 0){\n            setFaqs(questions)\n        // }\n    },[wantedQ])\n    \n    const toggleQuestion = id => {\n        setFaqs(\n            faqs.map(faq => {\n                if(faq.id === id){\n                    faq.open = !faq.open\n                }else{\n                    faq.open = false\n                }\n                return faq;\n            })\n        )\n    }\n    \n    const findQuestionHandler = (e) => {\n        setWantedQ(e.target.value)\n    }\n    \n    const handleRemoveQs = tag => {\n        setFaqs(faqs.filter(faq => !faq.tags.includes(tag)));\n    }\n        \n    const filteredQs = faqs.filter(faq => faq.question.toLowerCase().includes(wantedQ.toLowerCase()))\n    const tagsList = [...new Set(filteredQs.map(faq => [...faq.tags]).flat())];\n    \n    // console.log(tagsList);\n    return (\n        <div className='faq-page-container'>\n            <header>the best faq page ever!</header>\n            <div className='search-question-container'>\n                <input\n                    name='search'\n                    type='text'\n                    value={wantedQ}\n                    autoComplete = 'off'\n                    placeholder='Search question'\n                    onChange={findQuestionHandler}\n                    autoFocus={true}\n                    className='search'\n                />\n            </div>\n            \n            <Tags list={tagsList} removeQ={handleRemoveQs}/>\n\n            <div className='faqs'>\n            \n                {   filteredQs.length === 0\n                    ? <span className='no-matches'>no questions found.. 😭</span> \n                    : filteredQs\n                        .map((faq, index) => (\n                            <React.Fragment key={index}>\n                                <Question faq={faq} onToggleQ={toggleQuestion}/>\n                            </React.Fragment>\n                        ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default FAQ;","import React from 'react';\nimport { uuid } from 'uuidv4';\nimport './todo-styles.css';\n\n\nconst List = (props) => {\n    return (\n        <div>\n            <ul>\n                {\n                    props.items.map((item, index) => (\n                        <li key={index} className={item.completed ? 'completed' : 'pending'}>\n                            {item.task}\n                            <div className='actions'>\n                                <span className={item.completed ? 'hide' : 'done'} onClick={() => props.markAsCompleted(item.id)}>\n                                    <i className='fa fa-check'/>\n                                </span>\n                                <span className='trash' onClick={() => props.removeTask(item.id)}>\n                                    <i className='fa fa-trash'/>\n                                </span>\n                            </div>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default List;","import React, { useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport \"./todo-styles.css\";\nimport List from './List';\n\nconst tasks = [\n    {\n      id: uuid(),\n      task: \"Pay the rent\",\n      completed: false\n    },\n    {\n      id: uuid(),\n      task: \"Go to the gym\",\n      completed: false\n    },\n    {\n      id: uuid(),\n      task: \"Do my homework\",\n      completed: false\n    }\n]\n\nconst Todo = () => {\n    const [ items, setItems ] = useState(tasks);\n    const [ task, setTask ] = useState('');\n\n    const handleOnChange = e => {\n        const { target: { value } } = e;\n        setTask(value)\n    }\n\n    const handleOnSubmit = e => {\n        e.preventDefault()\n        if(task.length !== 0){\n            setItems(items.concat({id: uuid(), task: task, completed: false}))\n            setTask('');\n        }\n    }\n\n    const handleMarkAsCompleted = id => {\n        /* works just for classes\n        const taskToChange = items.find(item => item.id === id);\n        taskToChange.completed = true;\n        setItems(Object.assign(items, taskToChange))*/\n        setItems(items.map(item => item.id === id ? {...item, completed: true} : item));\n    }\n\n    const handleRemoveTask = id => {\n        const filteredTasks = items.filter(task => task.id !== id)\n        setItems(filteredTasks);\n    }\n\n    return(\n        <div className='Todo'>\n            <h1>Tasks manager</h1>\n            <form autoComplete='off' onSubmit={handleOnSubmit}>\n                <input\n                    value={task}\n                    placeholder='Enter new task'\n                    onChange={handleOnChange}\n                />\n            </form>\n            <List items={items} markAsCompleted={handleMarkAsCompleted} removeTask={handleRemoveTask}/>\n        </div>\n    )\n\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './timer-styles.css';\n\nclass Timer extends Component {\n    state = {\n        alert: {\n            type: '',\n            message: ''\n        },\n        time: 0\n    }\n    times = {\n        defaultTime: 1500,\n        shortBreak: 300,\n        longBreak: 900\n    }\n\n    componentDidMount(){\n        //set default time when component mounts\n        this.setDefaultTime()\n    }\n\n    setDefaultTime = () => {\n        this.setState({\n            time: this.times.defaultTime\n        })\n    }\n\n    setTime = newTime => {\n        this.restartInterval();\n\n        this.setState({\n            time: newTime\n        })\n    }\n\n    restartInterval = () => {\n        //clearing the interval\n        clearInterval(this.interval);\n\n        //execute countDound every second\n        this.interval = setInterval(this.countDown, 1000);\n    }\n\n    countDown = () => {\n        //if the time reach 0 then we diplay Buzzzzz! alert\n        if(this.state.time === 0){\n            this.setState({\n                alert: {\n                    type: 'buz',\n                    message: 'Buzzzzzz!'\n                }\n            });\n        }else {\n            //we decrease the time second by second\n            this.setState({\n                time: this.state.time - 1\n            })\n        }\n    }\n\n    setTimeForWork = () => {\n        this.setState({\n            alert: {\n                type: 'work', \n                message: 'Working!'\n            }\n        });\n        return this.setTime(this.times.defaultTime)\n    }\n\n    setTimeForShortBreak = () => {\n        this.setState({\n            alert: {\n                type: 'shortBreak', \n                message: 'Taking a short break!'\n            }\n        });\n        return this.setTime(this.times.shortBreak)\n    }\n\n    setTimeForLongBreak = () => {\n        this.setState({\n            alert: {\n                type: 'longBreak', \n                message: 'Taking a long break!'\n            }\n        });\n        return this.setTime(this.times.shortBreak)\n    }\n\n    displayTimer = (seconds) => {\n        //formatting the time into mm:ss\n        const m = Math.floor(seconds % 3600 / 60);\n        const s = Math.floor(seconds % 3600 % 60)\n\n        return `${m < 10 ? '0' : ''}${m}:${s < 10 ? '0' : ''}${s}`;\n    }\n\n    render(){\n    \n        const { alert: { message, type}, time } = this.state;\n\n        return(\n            <div className='Pomodoro'>\n                <div className={`alert ${type}`}>\n                    {message}\n                </div>\n\n                <div className='timer'>\n                    {this.displayTimer(time)}\n                </div>\n\n                <div className='types'>\n                    <button className='btn start' onClick={this.setTimeForWork}>Start Working!</button>\n                \n                    <button className='btn short' onClick={this.setTimeForShortBreak}>Short break!</button>\n\n                    <button className='btn long' onClick={this.setTimeForLongBreak}>longBreak!</button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport c3 from 'c3';\nimport './chart-styles.css';\n\nclass Chart extends Component {\n    componentDidMount(){\n        //when the component mounts the first time we update the chart\n        this.updateChart();\n    }\n\n    //\n    componentDidUpdate(){\n        //when we receive a new prop o the prop changes then we update the chart again\n        this.updateChart();\n    }\n\n    updateChart(){\n        c3.generate({\n            bindto: '#chart',\n            data: {\n                columns: this.props.columns,\n                type: this.props.chartType\n            }\n        });\n    }\n\n    render(){\n        return (\n            <div id='chart'></div>\n        )\n    }\n}\n\nexport default Chart;","import React,  { Component } from 'react';\nimport Chart from './Chart';\nimport './main-styles.css';\n\nclass Main extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            chartType: 'line'\n        };\n\n        this.columns = [\n            ['BTC', 300, 600, 10000, 15000, 13000, 11000],\n            ['ETH', 2000, 3000, 5000, 4000, 3000, 940],\n            ['XRP', 100, 200, 300, 500, 400, 300]\n        ];\n    }\n\n    setBarChart = () => {\n        this.setState({\n            chartType: 'bar'\n        });\n    }\n\n    setLineChart = () => {\n        this.setState({\n            chartType: 'line'\n        });\n    }\n\n    render(){\n        return(\n            <div className='Main'>\n                <header>\n                    <h1>Chart</h1>\n                </header>\n                <section>\n                    <Chart columns={this.columns} chartType={this.state.chartType}/>\n                    <p className='chart-btns'>\n                        Chart Type\n                        <button className='btn-chart' onClick={this.setBarChart}>Bar</button>\n                        <button className='btn-chart' onClick={this.setLineChart}>Line</button>\n                    </p>\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React,  { PureComponent } from 'react';\n\nclass Result extends PureComponent {\n    render(){\n        return(\n            <li>{this.props.result}</li>\n        )\n    }\n}\n\nexport default Result;","import React, { Component } from 'react';\nimport Result from './Result';\nimport './numbers-style.css';\n\nclass Numbers extends Component {\n\n    state = {\n        numbers: '', //to save the input value \n        results: [] //to save the results of the sums\n    };\n\n    handleNumberChange = e => {\n        const { target: { value } } = e;\n\n        //converting the string value to array: '1234' => ['1', '2', '3', '4'];\n        const numbers = Array.from(value);\n\n        //summing all the numbers from the array; ['1', '2', '3', '4'] => 10\n        const result = numbers.reduce((a, b) => Number(a) + Number(b), 0);\n\n        //updating the local state\n        this.setState({\n            numbers: value,\n            results: [...this.state.results, result]\n        })\n    }\n\n    render(){\n        return(\n            <div className='Numbers'>\n                <input\n                    type='number'\n                    value={this.state.numbers}\n                    onChange={this.handleNumberChange}\n                />\n                <ul>\n                    {\n                        this.state.results.map((result, i) => (\n                            <Result key={i} result={result}/>\n                        ))\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Numbers;","import React, { Component } from 'react';\nimport Numbers from './Numbers';\n\nconst headerStyle = {\n    backgroundColor: 'black',\n    color: 'white',\n    textAlign: 'center',\n    fontSize: '30px',\n    padding: '10px'\n}\n\nclass SumAll extends Component {\n    render(){\n        return(\n            <div>\n                <h1 style={headerStyle}>Sum of all Numbers</h1>\n                <Numbers/>\n            </div>\n        ) \n\n    }\n}\n\nexport default SumAll;","import React from 'react';\n\nconst Pages = ({postsPerPage, totalPosts, paginate}) => {\n    const pageNumbers = [];\n\n    for(let i=1; i<=Math.ceil(totalPosts/postsPerPage); i++){\n        pageNumbers.push(i);\n    }\n    \n    return (\n        <div className='pages-container'>\n            <ul>\n                {\n                    pageNumbers.map(number => (\n                        <li key={number} onClick={() => paginate(number)}>\n                            <a  href='#'>{number}</a>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Pages;","import React, {useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Posts = ({posts, loading}) => {\n\n    if(loading){\n        return <h2>Loading...</h2>\n    }\n\n    return (\n        <ul className='posts-container'>\n            {\n                posts.map(post => (\n                    <li key={post.id}>{post.title}</li>\n                ))\n            }\n        </ul>\n    )\n\n}\n\nexport default Posts;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './pagination-styless.css';\nimport Pages from './Pages.js';\nimport Posts from './Posts';\n\nconst Pagination = () => {\n    const [ posts, setPosts] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const [ currentPage, setCurrentPage ] = useState(1);\n    const [ postsPerPage, setPostsPerPage ] = useState(10);\n\n  //change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n        setLoading(true)\n        const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n        // const res = await axios.get('https://jsonplaceholder.typicode.com/posts?userId=1')\n        setPosts(res.data)\n        setLoading(false);\n    }\n        fetchPosts()\n  }, [])\n\n  //get current post\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n\n    return (\n        <div>\n            <header>\n                <h1>Smart Posts</h1>\n            </header>\n            <Posts posts={currentPosts} loading={loading}/>\n            <Pages postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate}/>\n        </div>\n    )\n}\n\nexport default Pagination;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useBookSearch = (query, pageNumber) => {\n    const [ loading, setLoading ] = useState(true);\n    const [ error, setError ] = useState(false);\n    const [ books, setBooks ] = useState([]);\n    const [ hasMore, setHasMore ] = useState(false);\n\n    useEffect(() => {\n        setBooks([]);\n    }, [query])\n\n    useEffect(() => {\n        setLoading(true);\n        setError(false);\n        let cancel \n        axios({\n            method: 'GET',\n            url: 'http://openlibrary.org/search.json',\n            params: { q: query, page: pageNumber },\n            cancelToken: new axios.CancelToken((c) => cancel = c), //to cancel while we write into the input\n        }).then(res => {\n            // console.log(res.data.docs)\n            setBooks(prevBooks => { //to dont overwrite the book list but to use the previous books too\n                return [...new Set([...prevBooks, ...res.data.docs.map(b => {\n                    return b.title\n                })])];\n            })\n            setHasMore(res.data.docs.length > 0);\n            setLoading(false)\n        }).catch(error => {\n            if(axios.isCancel(error)) return;\n            setError(true);\n        }) \n        return () => cancel()\n    }, [query, pageNumber])\n\n    return { loading, error, books, hasMore }\n}\n\nexport default useBookSearch;","import React from 'react';\nimport './spinner-styles.css';\n\nconst Spinner = () => {\n    return(\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default Spinner;","import React, {useState, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\n\nimport './infinite-scrolling-styles.css';\nimport Spinner from './Spinner';\n\nexport default function InfiniteScrolling () {\n    const [ query, setQuery ] = useState('');\n    const [ pageNumber, setPageNumber ] = useState(1);\n    \n    const { books, loading, error, hasMore } = useBookSearch(query, pageNumber);\n\n    const observer = useRef();\n    const lastBookElementRef = useCallback(node => {\n        if(loading) return\n        if(observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting && hasMore) {\n                // console.log('visible') --> just is console loged when we reach the very las element\n                setPageNumber(prevPageNumer => prevPageNumer + 1)\n            }\n        })\n        if(node) observer.current.observe(node)\n    }, [loading, hasMore])\n\n    function handleSearch(e){\n        setQuery(e.target.value)\n        setPageNumber(1);\n    }\n\n    return(\n        <div className='books-finder-container'>\n            <header>\n                <h1>Book</h1>\n            </header>\n\n            <input\n                value={query}\n                type='text'\n                onChange={handleSearch}\n                placeholder='Enter a book name'\n                className='book-finder'\n            />\n            {\n                books.map((book, index) => {\n                    if(books.length === index + 1){\n                        return <div ref={lastBookElementRef} key={book} className='book'> {book} </div>  \n                    }else {\n                        return <div key={book} className='book'> {book} </div>\n                    }\n                })\n            }\n            <div className='loading-container'>{loading && <Spinner/>} </div>\n            <div>{error && 'Error...'}</div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './basic-rputer-styles.css';\n\nfunction Posts(props){\n    const [ posts, setPosts ] = useState([]);\n    const [ loading, setLoading ] = useState(false);\n    const userId = props.match.params.id;\n\n    let history = useHistory();\n\n    useEffect(() => {\n        async function fetchPosts(){\n            setLoading(true)\n            const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)\n            const data = await res.json();\n            setPosts(data);\n            setLoading(false);\n        }\n        fetchPosts();\n    },[])\n\n    function handleClick() {\n        history.goBack();\n      }\n\n    if(loading){\n        return (\n            <div className='loading'>\n                <p className='loading-text'>Loading....</p>\n            </div>\n        )\n    }\n\n    return(\n        <div>\n            <header>\n                <h1>Posts</h1>\n            </header>\n            <button onClick={handleClick} className='to-back'>Go Back</button>\n            <h1 className='post-header'>My id is: {userId}</h1>\n            {\n                posts.map(post => (\n                    <div key={post.id} className='user-posts'>\n                        <p className='post-title'>{post.title}</p>\n                        <p className='post-body'>{post.body}</p>\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Posts;","import React, { useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport './basic-rputer-styles.css';\n\nfunction Users(){\n    \n    const [ users, setUsers ] = useState([])\n    \n    let { path, url } = useRouteMatch();\n    \n    useEffect(() => {\n        async function fetchUsers(){\n            const res = await fetch('https://jsonplaceholder.typicode.com/users');\n            const usersList = await res.json();\n            setUsers(usersList);\n        }\n        fetchUsers()\n    }, [])\n\n    return (\n        <div>\n            <header>\n                <h1>Users</h1>\n            </header>\n            <ul>\n                {\n                    users.map(user => (\n                        <li key={user.id}>\n                            <Link to={`${url}/my-posts/${user.id}`}>{user.name}</Link>\n                        </li>\n                    )) \n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Users;","import React from 'react';\nimport { Switch, Route, useRouteMatch} from 'react-router-dom';\nimport Posts from './Posts.js';\nimport Users from './Users.js';\n\nimport './basic-rputer-styles.css';\n\nconst BasicRouter = () => {\n    let { path, url } = useRouteMatch();\n    // console.log(path) //=> /apps-collection/basic-router\n    return (\n        <>\n            <Switch>\n                <Route exact path={`${path}/`} component={Users}/>\n                <Route path={`${path}/my-posts/:id`} component={Posts}/>\n            </Switch>\n        </>\n    )\n}\n\nexport default BasicRouter;","import React, { useState } from 'react';\n\nimport './simple-form-styles.css';\nimport img from './indian.png'\n\nconst SimpleForm = () => {\n    const [ info, setInfo ] = useState({firstName: '', lastName: '', email: '', phone: ''})\n    const [ errors, setErrors ] = useState({})\n\n    const handleOnChange = e => {\n        const { target: { value, name } } = e;\n        setInfo({\n            ...info, [name]: value\n        })\n    }\n\n    const handleOnSubmit = e => {\n        e.preventDefault();\n        const { firstName, lastName, email, phone} = info;\n\n        //aunque al dar clic me mostrara false en consola, el estado ya habra cambiado\n        //y si hay errores, estaran en TRUE, y por ende ya tendran border: red;\n        setErrors({\n            ...errors, firstName: firstName === '', lastName: lastName === '',\n        })\n\n        const data = {\n            firstName, \n            lastName, \n            email, \n            phone\n        }\n        // console.log(data);\n        // console.log(errors);\n    }\n\n    const handleOnFocus = (e) => {\n        const { target: { name } } = e;\n        setErrors({\n            ...errors, [name]: false\n        })\n    }\n\n    return(\n        <div>\n            <header>\n                <h2>Simple Form</h2>\n            </header>\n            <div className='form-wrapper'>\n                <img src={img} className='image'/>\n                <form autoComplete='off' onSubmit={handleOnSubmit} className='simple-form'>\n                    <div className='first-name'>\n                        <p className='simple-form-input-title'><strong>First name:</strong></p>\n                        <div className='simple-form-input-wrapper'>\n                            <input\n                                name='firstName'\n                                type='text'\n                                value={info.firstName}\n                                onChange={handleOnChange}\n                                className={`form-input ${errors.firstName ? ' error' : ''}`}\n                                onFocus={handleOnFocus}\n                            />\n                            {errors.firstName && (<p className='simple-input-error-message'>Required field</p>)}\n                        </div>\n                    </div>\n                    <div className='last-name'>\n                        <p className='simple-form-input-title'><strong>Last name:</strong></p>\n                        <div className='simple-form-input-wrapper'>\n                            <input\n                                name='lastName'\n                                type='text'\n                                value={info.lastName}\n                                onChange={handleOnChange}\n                                className={`form-input ${errors.lastName ? ' error' : ''}`}\n                                onFocus={handleOnFocus}\n                            />\n                            {errors.lastName && (<p className='simple-input-error-message'>Required field</p>)}\n                        </div>\n                    </div>\n                    <div className='email'>\n                        <p className='simple-form-input-title'><strong>Email:</strong></p>\n                            <input\n                                name='email'\n                                type='emails'\n                                value={info.email}\n                                onChange={handleOnChange}\n                                className='form-input'\n                            />\n                    </div>\n                    <div className='phone'>\n                        <p className='simple-form-input-title'><strong>Phone:</strong></p>\n                            <input\n                                name='phone'\n                                type='tel'\n                                value={info.phone}\n                                onChange={handleOnChange}\n                                className='form-input'\n                            />\n                    </div>\n                    <button className='simple-form-btn'>Send Information</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default SimpleForm;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport './App.css';\nimport Home from './components/home/Home';\nimport FAQ from './components/faq/FAQ';\nimport Todo from './components/basicTodo/Todo';\nimport Timer from './components/pomodoroTimer/Timer';\nimport Main from './components/chart/Main';\nimport SumAll from './components/sumAllNumbers/SumAll';\nimport Pagination from './components/pagination/Pagination';\nimport InfiniteScrolling from './components/infiniteScrolling/InfiniteScrolling';\nimport BasicRouter from './components/basicRouter/BasicRouter';\nimport SimpleForm from './components/simple-form/SimpleForm';\n\nconst routes = [\n  {\n    path: \"/apps-collection\",\n    exact: true,\n    name: \"Home\",\n    component: <Home/>\n  },\n  {\n    path: \"/apps-collection/accordion\",\n    name: \"FAQ page\",\n    exact: true,\n    component: <FAQ/>\n  },\n  {\n    path: \"/apps-collection/basic-todo\",\n    name: \"Basic Todo\",\n    exact: true,\n    component: <Todo/>\n  },\n  {\n    path: \"/apps-collection/pomodoro-timer\",\n    name: \"Pomodoro Timer\",\n    exact: true,\n    component: <Timer/>\n  },\n  {\n    path: \"/apps-collection/chart\",\n    name: \"Basic Chart\",\n    exact: true,\n    component: <Main/>\n  },\n  {\n    path: \"/apps-collection/sum-all\",\n    name: \"Sum all Numbers\",\n    exact: true,\n    component: <SumAll/>\n  },\n  {\n    path: \"/apps-collection/pagination\",\n    name: \"Pagination\",\n    exact: true,\n    component: <Pagination/>\n  },\n  {\n    path: \"/apps-collection/infinite-scrolling\",\n    name: \"Infinite Scrolling\",\n    exact: true,\n    component: <InfiniteScrolling/>\n  },\n  {\n    path: \"/apps-collection/basic-router\",\n    name: \"Basic Router\",\n    // exact: true,\n    component: <BasicRouter/>\n  },\n  {\n    path: \"/apps-collection/simple-form\",\n    name: \"Simple Form\",\n    // exact: true,\n    component: <SimpleForm/>\n  }\n]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className='inner-container'>\n          <section className=\"sidebar\">\n            <h1>Apps 💪</h1>\n            <ul>\n              {\n                routes.map((route, index) => (\n                  <li key={index}>\n                    <Link to={route.path}>{route.name}</Link>\n                  </li>\n                ))\n              }\n            </ul>\n          </section>\n          <section className='content'>\n            <Switch>\n                {\n                  routes.map((route, index) => (\n                    <Route exact={route.exact} key={index} path={route.path} children={route.component}/>\n                  ))\n                }\n              </Switch>\n          </section>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}